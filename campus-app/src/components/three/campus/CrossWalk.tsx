/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

type GLTFResult = GLTF & {
  nodes: {
    REd_4001_1: THREE.Mesh;
    REd_4001_2: THREE.Mesh;
    Yellow_4001_1: THREE.Mesh;
    Yellow_4001_2: THREE.Mesh;
    Green_4001_1: THREE.Mesh;
    Green_4001_2: THREE.Mesh;
    Body_9001: THREE.Mesh;
    Pipe_20001: THREE.Mesh;
    Base_4001: THREE.Mesh;
    Pipe_21001_1: THREE.Mesh;
    Pipe_21001_2: THREE.Mesh;
    Pipe_21001_3: THREE.Mesh;
    Pipe_21001_4: THREE.Mesh;
    Pipe_21001_5: THREE.Mesh;
    斑马线1_10001: THREE.Mesh;
  };
  materials: {
    Mat: THREE.MeshStandardMaterial;
    REd: THREE.MeshStandardMaterial;
    RandomColor_43: THREE.MeshStandardMaterial;
    RandomColor_44: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
    RandomColor_49: THREE.MeshStandardMaterial;
    RandomColor_50: THREE.MeshStandardMaterial;
    ['Mat.1']: THREE.MeshStandardMaterial;
  };
};

export default function CrossWalk(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF('/cross-walk.glb') as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-40.65, 85.78, 193.33]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh material={materials.Mat} geometry={nodes.REd_4001_1.geometry} />
        <mesh material={materials.REd} geometry={nodes.REd_4001_2.geometry} />
      </group>
      <group position={[-40.65, 78.52, 193.33]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh material={materials.Mat} geometry={nodes.Yellow_4001_1.geometry} />
        <mesh material={materials.RandomColor_43} geometry={nodes.Yellow_4001_2.geometry} />
      </group>
      <group position={[-40.65, 71.58, 193.33]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh material={materials.Mat} geometry={nodes.Green_4001_1.geometry} />
        <mesh material={materials.RandomColor_44} geometry={nodes.Green_4001_2.geometry} />
      </group>
      <mesh
        material={materials.Mat}
        geometry={nodes.Body_9001.geometry}
        position={[-40.65, 78.44, 198.87]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.White}
        geometry={nodes.Pipe_20001.geometry}
        position={[-40.65, 48.32, 197.75]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        material={materials.White}
        geometry={nodes.Base_4001.geometry}
        position={[-40.67, 9.94, 197.75]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <group position={[-45.08, 73.4, -226.15]} rotation={[Math.PI / 2, 0, -Math.PI / 2]}>
        <mesh material={materials.White} geometry={nodes.Pipe_21001_1.geometry} />
        <mesh material={materials.Mat} geometry={nodes.Pipe_21001_2.geometry} />
        <mesh material={materials.REd} geometry={nodes.Pipe_21001_3.geometry} />
        <mesh material={materials.RandomColor_49} geometry={nodes.Pipe_21001_4.geometry} />
        <mesh material={materials.RandomColor_50} geometry={nodes.Pipe_21001_5.geometry} />
      </group>
      <mesh
        material={materials['Mat.1']}
        geometry={nodes.斑马线1_10001.geometry}
        position={[-1.86, -10, -115.05]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload('/cross-walk.glb');
