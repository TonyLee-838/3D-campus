/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { getPublicPath } from '../../../../utils/getPublicPath';
import { Dims2 } from '../../../../types';

type GLTFResult = GLTF & {
  nodes: {
    Mesh039: THREE.Mesh;
    Mesh039_1: THREE.Mesh;
    Mesh039_2: THREE.Mesh;
    Mesh039_3: THREE.Mesh;
    Seat_place_9: THREE.Mesh;
    Seat_place_8: THREE.Mesh;
    Seat_place_7: THREE.Mesh;
    Seat_place_4_2: THREE.Mesh;
    Pipe_1: THREE.Mesh;
    Pipe_5: THREE.Mesh;
  };
  materials: {
    ['Round Building_1']: THREE.MeshStandardMaterial;
    Car_Blue: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
    Glass_2: THREE.MeshStandardMaterial;
  };
};

interface StationProps {
  position: Dims2;
  rotationY: number;
}

export default function Station({ position, rotationY }: StationProps) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(`${getPublicPath()}/3d/block/station.glb`) as GLTFResult;

  const [x, z] = position;

  return (
    <group ref={group} position={[x, 2, z]} rotation={[0, rotationY, 0]} dispose={null}>
      <group
        position={[-1.31, 0.19, 0.04]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
        scale={[0.3, 0.3, 0.3]}
      >
        <group position={[-23.74, -295.41, -16.27]} rotation={[0, 0, -Math.PI]}>
          <group position={[0, -254.75, 0]}>
            <group position={[0, 0, 22.33]} rotation={[Math.PI / 2, 0, 0]}>
              <mesh material={materials['Round Building_1']} geometry={nodes.Mesh039.geometry} />
              <mesh material={materials.Car_Blue} geometry={nodes.Mesh039_1.geometry} />
              <mesh material={materials.White} geometry={nodes.Mesh039_2.geometry} />
              <mesh material={materials.Glass_2} geometry={nodes.Mesh039_3.geometry} />
            </group>
          </group>
        </group>
      </group>
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Seat_place_9.geometry}
        position={[157.69, 0.08, 0.1]}
        rotation={[-Math.PI / 2, -1.57, 0]}
        scale={[0.01, 0.01, 0.01]}
      />
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Seat_place_8.geometry}
        position={[157.38, 0.08, 0.1]}
        rotation={[-Math.PI / 2, -1.57, 0]}
        scale={[0.01, 0.01, 0.01]}
      />
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Seat_place_7.geometry}
        position={[156.44, 0.08, 0.1]}
        rotation={[-Math.PI / 2, -1.57, 0]}
        scale={[0.01, 0.01, 0.01]}
      />
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Seat_place_4_2.geometry}
        position={[157.06, 0.08, 0.1]}
        rotation={[-Math.PI / 2, -1.57, 0]}
        scale={[0.01, 0.01, 0.01]}
      />
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Pipe_1.geometry}
        position={[98.35, 0.31, 1.22]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.01, 0.01, 0.01]}
      />
      <mesh
        material={materials['Round Building_1']}
        geometry={nodes.Pipe_5.geometry}
        position={[91.75, 0.31, 6.68]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
        scale={[0.01, 0.01, 0.01]}
      />
    </group>
  );
}

useGLTF.preload(`${getPublicPath()}/3d/block/station.glb`);
