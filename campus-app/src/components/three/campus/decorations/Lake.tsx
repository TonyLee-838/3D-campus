/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { getPublicPath } from '../../../../utils/getPublicPath';
import { useConfiguredGLTF } from '../../../../hooks/useConfiguredGLTF';

type GLTFResult = GLTF & {
  nodes: {
    Grass005_1: THREE.Mesh;
    Grass005_2: THREE.Mesh;
    Grass005_3: THREE.Mesh;
    Grass005_4: THREE.Mesh;
    Grass005_5: THREE.Mesh;
  };
  materials: {
    EarthGreen: THREE.MeshStandardMaterial;
    White_1: THREE.MeshStandardMaterial;
    ['Round Building_1']: THREE.MeshStandardMaterial;
    Grass: THREE.MeshStandardMaterial;
    Windows: THREE.MeshStandardMaterial;
  };
};

export default function Lake(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useConfiguredGLTF(`${getPublicPath()}/3d/block/lake.glb`) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 3.51, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[0.2, 0.2, 0.2]}>
        <mesh material={materials.EarthGreen} geometry={nodes.Grass005_1.geometry} />
        <mesh material={materials.White_1} geometry={nodes.Grass005_2.geometry} />
        <mesh material={materials['Round Building_1']} geometry={nodes.Grass005_3.geometry} />
        <mesh material={materials.Grass} geometry={nodes.Grass005_4.geometry} />
        <mesh material={materials.Windows} geometry={nodes.Grass005_5.geometry} />
      </group>
    </group>
  );
}

useGLTF.preload(`${getPublicPath()}/3d/block/lake.glb`);
