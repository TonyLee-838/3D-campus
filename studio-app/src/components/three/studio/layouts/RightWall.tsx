/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { getPublicPath } from '../../../../utils/getPublicPath';

type GLTFResult = GLTF & {
  nodes: {
    Mesh019: THREE.Mesh;
    Mesh019_1: THREE.Mesh;
    Mesh019_2: THREE.Mesh;
    Mesh019_3: THREE.Mesh;
    Mesh019_4: THREE.Mesh;
  };
  materials: {
    ['paper.001']: THREE.MeshStandardMaterial;
    ['10 - Default']: THREE.MeshStandardMaterial;
    ['08 - Default21']: THREE.MeshStandardMaterial;
    ['08 - Default2']: THREE.MeshStandardMaterial;
    ['15 - Default']: THREE.MeshStandardMaterial;
  };
};

export default function RightWall(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(`${getPublicPath()}/3d/common/right-wall.glb`) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[4.26, 0.01, -13.89]} scale={[0.1, 0.1, 0.1]}>
        <mesh material={materials['paper.001']} geometry={nodes.Mesh019.geometry} />
        <mesh material={materials['10 - Default']} geometry={nodes.Mesh019_1.geometry} />
        <mesh material={materials['08 - Default21']} geometry={nodes.Mesh019_2.geometry} />
        <mesh material={materials['08 - Default2']} geometry={nodes.Mesh019_3.geometry} />
        <mesh material={materials['15 - Default']} geometry={nodes.Mesh019_4.geometry} />
      </group>
    </group>
  );
}

useGLTF.preload(`${getPublicPath()}/3d/common/right-wall.glb`);
