/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { getPublicPath } from '../../../../utils/getPublicPath';

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh;
    Mesh_1: THREE.Mesh;
  };
  materials: {
    ['01 - Default']: THREE.MeshStandardMaterial;
    ['15 - Default']: THREE.MeshStandardMaterial;
  };
};

export default function Ceiling(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(`${getPublicPath()}/3d/common/ceiling.glb`) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0.11, 0, -0.48]} scale={[0.005, 0.005, 0.005]}>
        <mesh material={materials['01 - Default']} geometry={nodes.Mesh.geometry} />
        <mesh material={materials['15 - Default']} geometry={nodes.Mesh_1.geometry} />
      </group>
    </group>
  );
}

useGLTF.preload(`${getPublicPath()}/3d/common/ceiling.glb`);
