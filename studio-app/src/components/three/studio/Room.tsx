/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

import colors from "../../../config/colors";

type GLTFResult = GLTF & {
  nodes: {
    Rectangle003: THREE.Mesh;
  };
  materials: {
    ["01 - Default"]: THREE.MeshStandardMaterial;
  };
};

export default function Room(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "./public/3d/common/room.glb"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Rectangle003.geometry}
        material={materials["01 - Default"]}
        scale={[0.05, 0.04, 0.06]}
      />
    </group>
  );
}

useGLTF.preload("./public/3d/common/room.glb");
